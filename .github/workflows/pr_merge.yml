name: PR Merge

on:
  push:
    branches:
      - master

env:
  CI: true
  CARGO_TERM_COLOR: always
  CARGO_TAG_NAME: "GitHub Actions"
  CARGO_TAG_EMAIL: "github-actions@users.noreply.github.com"
  OPENSSL_STATIC: 1
  OPENSSL_NO_VENDOR: 0

permissions:
  contents: write

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
      - name: Cargo install
        uses: dimitrmo/cargo-verison-action@v1.0.33
        with:
          workspace: true
          skip-bump: true

      - name: Store binary
        uses: actions/upload-artifact@v4
        with:
          name: cargo-verison
          path: ~/.cargo/bin/cargo-verison
          retention-days: 1
          compression-level: 9
  Publish:
    runs-on: ubuntu-latest
    needs:
      - Setup
    strategy:
      matrix:
        producers: [
          { image: "rhiaqey/ecb-daily", binary: "ecb-daily" },
          { image: "rhiaqey/iss-astros", binary: "iss-astros" },
          { image: "rhiaqey/iss-position", binary: "iss-position" },
          { image: "rhiaqey/pinger", binary: "pinger" },
          { image: "rhiaqey/rss", binary: "rss" },
          { image: "rhiaqey/ticker", binary: "ticker" },
          { image: "rhiaqey/yahoo", binary: "yahoo" }
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker buildx setup
        uses: docker/setup-buildx-action@v3

      - name: QEMU setup
        uses: docker/setup-qemu-action@v3

      - name: Cargo Verison Setup
        uses: actions/download-artifact@v5
        with:
          name: cargo-verison
          path: ~/.cargo/bin/

      - name: Cargo Verison permissions
        run: chmod +x ~/.cargo/bin/cargo-verison

      - name: Cargo Verison
        id: verison
        uses: dimitrmo/cargo-verison-action@v1.0.33
        with:
          workspace: true
          skip-install: true
          git-tag-version: false

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ matrix.gateways.image }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push docker image for ${{ matrix.producers.binary }}
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ matrix.producers.image }}:${{ steps.verison.outputs.next_version }},${{ matrix.producers.image }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          outputs: "type=registry"
          build-args: |
            BINARY=${{ matrix.producers.binary }}

  Commit:
    runs-on: ubuntu-latest
    needs:
      - Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Git setup
        run: |
          git config user.name "$CARGO_TAG_NAME"
          git config user.email "$CARGO_TAG_EMAIL"

      - name: Cargo Verison Setup
        uses: actions/download-artifact@v5
        with:
          name: cargo-verison
          path: ~/.cargo/bin/

      - name: Cargo Verison permissions
        run: chmod +x ~/.cargo/bin/cargo-verison

      - name: Cargo Verison
        id: verison
        uses: dimitrmo/cargo-verison-action@v1.0.33
        with:
          workspace: true
          skip-install: true
          message: |
            Release %s

            [skip ci]

      - name: Extract git branch
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Git push
        run: |
          echo "Current branch $GIT_BRANCH"
          git push origin $GIT_BRANCH
          git push origin $GIT_BRANCH --tags

      - name: Cleanup
        uses: geekyeggo/delete-artifact@v5
        with:
          name: cargo-verison
          failOnError: false

#      - name: Push Charts to GHCR
#        if: ${{ github.event_name != 'pull_request' }}
#        run: |
#          mkdir charts
#          for pkg in k8s/*; do
#            if [ -z "${pkg:-}" ]; then
#              break
#            fi
#            helm package "${pkg}" -d charts
#          done
#          for pkg in charts/*; do
#            if [ -z "${pkg:-}" ]; then
#              break
#            fi
#            helm push "${pkg}" oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts
#          done